#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ Trailing Stop –¥–ª—è LONG –∏ SHORT –ø–æ–∑–∏—Ü–∏–π
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
"""

from decimal import Decimal

def test_long_position_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ LONG –ø–æ–∑–∏—Ü–∏–∏ - –µ—Å—Ç—å –ª–∏ –ø—Ä–æ–±–ª–µ–º—ã?"""

    print("\n" + "="*60)
    print("–¢–ï–°–¢ LONG –ü–û–ó–ò–¶–ò–ò")
    print("="*60)

    # –°–∏–º—É–ª—è—Ü–∏—è LONG –ø–æ–∑–∏—Ü–∏–∏
    class MockLongTS:
        symbol = 'BTCUSDT'
        side = 'long'
        entry_price = Decimal('50000')

    ts = MockLongTS()
    distance = Decimal('0.5')  # 0.5% trailing

    print("\nüìà –°—Ü–µ–Ω–∞—Ä–∏–π 1: –¶–µ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç (–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Å–ª—É—á–∞–π)")
    print("-" * 40)

    # –¶–µ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç: 50000 ‚Üí 51000 ‚Üí 52000
    ts.current_price = Decimal('50000')
    ts.highest_price = Decimal('50000')
    ts.current_stop_price = Decimal('49750')  # 50000 * 0.995

    print(f"1. –ù–∞—á–∞–ª–æ: price={ts.current_price}, highest={ts.highest_price}, SL={ts.current_stop_price}")

    # –¶–µ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –¥–æ 52000
    ts.current_price = Decimal('52000')
    if ts.current_price > ts.highest_price:
        ts.highest_price = ts.current_price
        print(f"2. –¶–µ–Ω–∞ –≤—ã—Ä–æ—Å–ª–∞: price={ts.current_price}, highest={ts.highest_price}")

    # –†–∞—Å—á–µ—Ç –Ω–æ–≤–æ–≥–æ SL
    potential_stop = ts.highest_price * (Decimal('1') - distance / Decimal('100'))
    print(f"3. –†–∞—Å—á–µ—Ç: potential_stop = {ts.highest_price} * 0.995 = {potential_stop}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if potential_stop > ts.current_stop_price:
        print(f"4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {potential_stop} > {ts.current_stop_price}? –î–ê ‚úÖ")
        ts.current_stop_price = potential_stop
    else:
        print(f"4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {potential_stop} > {ts.current_stop_price}? –ù–ï–¢")

    print(f"5. –†–µ–∑—É–ª—å—Ç–∞—Ç: SL = {ts.current_stop_price}, price = {ts.current_price}")
    print(f"   SL < price? {ts.current_stop_price < ts.current_price} ‚úÖ (–ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è LONG)")

    print("\nüìâ –°—Ü–µ–Ω–∞—Ä–∏–π 2: –¶–µ–Ω–∞ –ø–∞–¥–∞–µ—Ç –ø–æ—Å–ª–µ —Ä–æ—Å—Ç–∞")
    print("-" * 40)

    # –¶–µ–Ω–∞ –ø–∞–¥–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ: 52000 ‚Üí 50500
    ts.current_price = Decimal('50500')
    print(f"1. –¶–µ–Ω–∞ —É–ø–∞–ª–∞: price={ts.current_price}, highest={ts.highest_price}, SL={ts.current_stop_price}")

    # highest_price –ù–ï –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏
    if ts.current_price > ts.highest_price:
        ts.highest_price = ts.current_price
        print(f"2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ highest? –ù–ï–¢ (—Ü–µ–Ω–∞ –Ω–∏–∂–µ –º–∞–∫—Å–∏–º—É–º–∞)")
    else:
        print(f"2. highest –æ—Å—Ç–∞–µ—Ç—Å—è: {ts.highest_price} (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")

    # –†–∞—Å—á–µ—Ç –Ω–æ–≤–æ–≥–æ SL
    potential_stop = ts.highest_price * (Decimal('1') - distance / Decimal('100'))
    print(f"3. –†–∞—Å—á–µ—Ç: potential_stop = {ts.highest_price} * 0.995 = {potential_stop}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if potential_stop > ts.current_stop_price:
        print(f"4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {potential_stop} > {ts.current_stop_price}? {potential_stop > ts.current_stop_price}")
    else:
        print(f"4. SL –æ—Å—Ç–∞–µ—Ç—Å—è: {ts.current_stop_price} (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")

    print(f"5. –†–µ–∑—É–ª—å—Ç–∞—Ç: SL = {ts.current_stop_price}, price = {ts.current_price}")
    print(f"   SL < price? {ts.current_stop_price < ts.current_price} ‚úÖ")

    print("\nüî¥ –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É (–∫–∞–∫ –≤ SHORT)")
    print("-" * 40)

    # –ü–æ–ø—Ä–æ–±—É–µ–º –≤–æ—Å—Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É SHORT –¥–ª—è LONG
    # –ú–æ–∂–µ—Ç –ª–∏ distance –∏–∑–º–µ–Ω–∏—Ç—å—Å—è —Ç–∞–∫, —á—Ç–æ–±—ã SL —Å—Ç–∞–ª –≤—ã—à–µ —Ü–µ–Ω—ã?

    print("–î–æ–ø—É—Å—Ç–∏–º, distance –º–µ–Ω—è–µ—Ç—Å—è —Å 0.5% –Ω–∞ 0.3%:")
    new_distance = Decimal('0.3')

    # –ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç —Å –º–µ–Ω—å—à–∏–º distance
    new_potential_stop = ts.highest_price * (Decimal('1') - new_distance / Decimal('100'))
    print(f"–ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç: {ts.highest_price} * 0.997 = {new_potential_stop}")
    print(f"–°—Ç–∞—Ä—ã–π SL: {ts.current_stop_price}")
    print(f"–ù–æ–≤—ã–π potential_stop > —Å—Ç–∞—Ä—ã–π SL? {new_potential_stop > ts.current_stop_price}")

    if new_potential_stop > ts.current_stop_price:
        print(f"‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ –ü–û–î–ù–Ø–¢–¨ SL —Å {ts.current_stop_price} –¥–æ {new_potential_stop}")
        print(f"–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {ts.current_price}")
        print(f"–ù–æ–≤—ã–π SL < —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞? {new_potential_stop < ts.current_price}")
        if new_potential_stop < ts.current_price:
            print("‚úÖ –í–°–Å –í –ü–û–†–Ø–î–ö–ï! SL –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∏–∂–µ —Ü–µ–Ω—ã –¥–ª—è LONG")
        else:
            print("‚ùå –ü–†–û–ë–õ–ï–ú–ê! SL –≤—ã—à–µ —Ü–µ–Ω—ã –¥–ª—è LONG!")

    print("\n" + "="*60)
    print("–í–´–í–û–î–´ –î–õ–Ø LONG:")
    print("="*60)
    print("1. highest_price –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–æ—Å—Ç–µ ‚úÖ")
    print("2. SL –ø—Ä–∏–≤—è–∑–∞–Ω –∫ highest_price ‚úÖ")
    print("3. –ü—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ü–µ–Ω—ã SL –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ –º–µ—Å—Ç–µ ‚úÖ")
    print("4. –ü—Ä–∏ —É–º–µ–Ω—å—à–µ–Ω–∏–∏ distance SL –ü–û–î–ù–ò–ú–ê–ï–¢–°–Ø –±–ª–∏–∂–µ –∫ —Ü–µ–Ω–µ")
    print("5. –ù–û! –î–ª—è LONG —ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ, —Ç.–∫. SL –≤—Å–µ–≥–¥–∞ –Ω–∏–∂–µ highest_price")
    print("6. –ü–†–û–ë–õ–ï–ú –ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù–û –¥–ª—è LONG –ø–æ–∑–∏—Ü–∏–π")


def test_short_position_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ SHORT –ø–æ–∑–∏—Ü–∏–∏ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã"""

    print("\n" + "="*60)
    print("–¢–ï–°–¢ SHORT –ü–û–ó–ò–¶–ò–ò")
    print("="*60)

    # –°–∏–º—É–ª—è—Ü–∏—è SHORT –ø–æ–∑–∏—Ü–∏–∏
    class MockShortTS:
        symbol = 'SAROSUSDT'
        side = 'short'
        entry_price = Decimal('0.19000')

    ts = MockShortTS()
    distance = Decimal('0.5')  # 0.5% trailing

    print("\nüìâ –°—Ü–µ–Ω–∞—Ä–∏–π 1: –¶–µ–Ω–∞ –ø–∞–¥–∞–µ—Ç (–Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —Å–ª—É—á–∞–π)")
    print("-" * 40)

    # –¶–µ–Ω–∞ –ø–∞–¥–∞–µ—Ç: 0.19 ‚Üí 0.18 ‚Üí 0.17
    ts.current_price = Decimal('0.19000')
    ts.lowest_price = Decimal('0.19000')
    ts.current_stop_price = Decimal('0.19095')  # 0.19 * 1.005

    print(f"1. –ù–∞—á–∞–ª–æ: price={ts.current_price}, lowest={ts.lowest_price}, SL={ts.current_stop_price}")

    # –¶–µ–Ω–∞ –ø–∞–¥–∞–µ—Ç –¥–æ 0.17
    ts.current_price = Decimal('0.17000')
    if ts.current_price < ts.lowest_price:
        ts.lowest_price = ts.current_price
        print(f"2. –¶–µ–Ω–∞ —É–ø–∞–ª–∞: price={ts.current_price}, lowest={ts.lowest_price}")

    # –†–∞—Å—á–µ—Ç –Ω–æ–≤–æ–≥–æ SL
    potential_stop = ts.lowest_price * (Decimal('1') + distance / Decimal('100'))
    print(f"3. –†–∞—Å—á–µ—Ç: potential_stop = {ts.lowest_price} * 1.005 = {potential_stop}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–¢–ï–ö–£–©–ê–Ø –õ–û–ì–ò–ö–ê)
    if potential_stop < ts.current_stop_price:
        print(f"4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {potential_stop} < {ts.current_stop_price}? –î–ê ‚úÖ")
        ts.current_stop_price = potential_stop

    print(f"5. –†–µ–∑—É–ª—å—Ç–∞—Ç: SL = {ts.current_stop_price}, price = {ts.current_price}")
    print(f"   SL > price? {ts.current_stop_price > ts.current_price} ‚úÖ (–ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è SHORT)")

    print("\nüìà –°—Ü–µ–Ω–∞—Ä–∏–π 2: –¶–µ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –ø–æ—Å–ª–µ –ø–∞–¥–µ–Ω–∏—è (–ü–†–û–ë–õ–ï–ú–ê!)")
    print("-" * 40)

    # –¶–µ–Ω–∞ —Ä–∞—Å—Ç–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ: 0.17 ‚Üí 0.18334
    ts.current_price = Decimal('0.18334')
    print(f"1. –¶–µ–Ω–∞ –≤—ã—Ä–æ—Å–ª–∞: price={ts.current_price}, lowest={ts.lowest_price}, SL={ts.current_stop_price}")

    # lowest_price –ù–ï –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ —Ä–æ—Å—Ç–µ
    if ts.current_price < ts.lowest_price:
        ts.lowest_price = ts.current_price
        print(f"2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ lowest? –ù–ï–¢")
    else:
        print(f"2. lowest –æ—Å—Ç–∞–µ—Ç—Å—è: {ts.lowest_price} (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)")

    # –°—Ü–µ–Ω–∞—Ä–∏–π —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º distance
    print("\n‚ö†Ô∏è –î–æ–ø—É—Å—Ç–∏–º, distance –∏–∑–º–µ–Ω–∏–ª—Å—è –∏–ª–∏ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è:")

    # –ü–µ—Ä–µ—Å—á–µ—Ç —Å —Ç–µ–º –∂–µ distance (–∏–º–∏—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è)
    potential_stop = ts.lowest_price * (Decimal('1') + distance / Decimal('100'))
    print(f"3. –†–∞—Å—á–µ—Ç: potential_stop = {ts.lowest_price} * 1.005 = {potential_stop}")
    print(f"   –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {ts.current_price}")
    print(f"   potential_stop < —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞? {potential_stop < ts.current_price} ‚ùå")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–¢–ï–ö–£–©–ê–Ø –õ–û–ì–ò–ö–ê)
    print(f"\n4. –¢–µ–∫—É—â–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print(f"   if potential_stop < current_stop_price:")
    print(f"   {potential_stop} < {ts.current_stop_price}? {potential_stop < ts.current_stop_price}")

    if potential_stop < ts.current_stop_price:
        print(f"   ‚ùå –ü–†–û–ë–õ–ï–ú–ê! –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SL = {potential_stop}")
        print(f"   –ù–æ —Ç–µ–∫—É—â–∞—è —Ü–µ–Ω–∞ = {ts.current_price}")
        print(f"   SL < —Ü–µ–Ω–∞ –¥–ª—è SHORT - –û–®–ò–ë–ö–ê!")

    print("\n" + "="*60)
    print("–í–´–í–û–î–´ –î–õ–Ø SHORT:")
    print("="*60)
    print("1. lowest_price –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ ‚úÖ")
    print("2. SL –ø—Ä–∏–≤—è–∑–∞–Ω –∫ lowest_price ‚úÖ")
    print("3. –ü—Ä–∏ —Ä–æ—Å—Ç–µ —Ü–µ–Ω—ã SL –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å—Å—è ‚ùå")
    print("4. –£—Å–ª–æ–≤–∏–µ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É ‚ùå")
    print("5. –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê!")


def compare_long_vs_short():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏ LONG –∏ SHORT"""

    print("\n" + "="*60)
    print("–°–†–ê–í–ù–ï–ù–ò–ï LONG vs SHORT")
    print("="*60)

    print("\nüìä LONG –ø–æ–∑–∏—Ü–∏–∏:")
    print("-" * 40)
    print("‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç: highest_price (–º–∞–∫—Å–∏–º—É–º)")
    print("‚Ä¢ SL —Ñ–æ—Ä–º—É–ª–∞: highest_price * (1 - distance%)")
    print("‚Ä¢ SL –¥–≤–∏–∂–µ—Ç—Å—è: –í–í–ï–†–• –ø—Ä–∏ —Ä–æ—Å—Ç–µ —Ü–µ–Ω—ã")
    print("‚Ä¢ –ü—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏: SL –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ –º–µ—Å—Ç–µ")
    print("‚Ä¢ –£—Å–ª–æ–≤–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: if potential_stop > current_stop")
    print("‚Ä¢ –†–µ–∑—É–ª—å—Ç–∞—Ç: SL –≤—Å–µ–≥–¥–∞ –ù–ò–ñ–ï highest_price ‚úÖ")
    print("‚Ä¢ –ü–†–û–ë–õ–ï–ú –ù–ï –û–ë–ù–ê–†–£–ñ–ï–ù–û")

    print("\nüìä SHORT –ø–æ–∑–∏—Ü–∏–∏:")
    print("-" * 40)
    print("‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç: lowest_price (–º–∏–Ω–∏–º—É–º)")
    print("‚Ä¢ SL —Ñ–æ—Ä–º—É–ª–∞: lowest_price * (1 + distance%)")
    print("‚Ä¢ SL –¥–≤–∏–∂–µ—Ç—Å—è: –í–ù–ò–ó –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ü–µ–Ω—ã")
    print("‚Ä¢ –ü—Ä–∏ —Ä–æ—Å—Ç–µ: SL –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–∞ –º–µ—Å—Ç–µ")
    print("‚Ä¢ –£—Å–ª–æ–≤–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: if potential_stop < current_stop")
    print("‚Ä¢ –ü—Ä–æ–±–ª–µ–º–∞: –ù–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É! ‚ùå")
    print("‚Ä¢ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ù–ê–ô–î–ï–ù–ê")

    print("\nüî¥ –ö–ª—é—á–µ–≤–æ–µ —Ä–∞–∑–ª–∏—á–∏–µ:")
    print("-" * 40)
    print("LONG: –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ distance, –Ω–æ–≤—ã–π SL –±–ª–∏–∂–µ –∫ highest_price")
    print("      highest_price - —ç—Ç–æ –º–∞–∫—Å–∏–º—É–º, —Ü–µ–Ω–∞ –≤—Å–µ–≥–¥–∞ <= highest_price")
    print("      –ü–æ—ç—Ç–æ–º—É SL –Ω–µ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –≤—ã—à–µ —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã ‚úÖ")
    print()
    print("SHORT: –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ distance, –Ω–æ–≤—ã–π SL –±–ª–∏–∂–µ –∫ lowest_price")
    print("       lowest_price - —ç—Ç–æ –º–∏–Ω–∏–º—É–º, —Ü–µ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å > lowest_price")
    print("       –ö–æ–≥–¥–∞ —Ü–µ–Ω–∞ –≤—ã—à–µ –º–∏–Ω–∏–º—É–º–∞, SL –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å < —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω—ã ‚ùå")
    print()
    print("–†–ï–®–ï–ù–ò–ï: –î–ª—è SHORT –æ–±–Ω–æ–≤–ª—è—Ç—å SL —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —Ü–µ–Ω–∞ <= lowest_price")


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
    test_long_position_logic()
    test_short_position_logic()
    compare_long_vs_short()

    print("\n" + "üîç "*20)
    print("–ò–¢–û–ì–û–í–û–ï –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï")
    print("üîç "*20)
    print()
    print("‚úÖ LONG –ø–æ–∑–∏—Ü–∏–∏: –õ–æ–≥–∏–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è, –ø—Ä–æ–±–ª–µ–º –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
    print("‚ùå SHORT –ø–æ–∑–∏—Ü–∏–∏: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —É—Å–ª–æ–≤–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SL")
    print()
    print("–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –ª–æ–≥–∏–∫—É –¥–ª—è SHORT –ø–æ–∑–∏—Ü–∏–π")
    print("–ù–µ —Ç—Ä–æ–≥–∞—Ç—å –ª–æ–≥–∏–∫—É LONG - –æ–Ω–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")