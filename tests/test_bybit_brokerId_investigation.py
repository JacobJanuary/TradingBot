#!/usr/bin/env python3
"""
–î–µ—Ç–∞–ª—å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ brokerId –≤ CCXT Bybit
"""
import sys
import os
import asyncio
import json

# Add project root to path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

import ccxt.async_support as ccxt


async def test_brokerId_investigation():
    """–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ brokerId –≤ CCXT"""

    print("\n" + "=" * 70)
    print("–ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï: brokerId –≤ CCXT Bybit")
    print("=" * 70)

    # Test Case 1: Default Bybit exchange
    print("\n--- –¢–ï–°–¢ 1: Default Bybit ---")
    exchange1 = ccxt.bybit({
        'enableRateLimit': True,
        'options': {
            'defaultType': 'future',
            'accountType': 'UNIFIED',
        }
    })

    print(f"brokerId in options: {exchange1.options.get('brokerId', 'NOT FOUND')}")

    # Check if it's in a different place
    if hasattr(exchange1, 'brokerId'):
        print(f"exchange.brokerId: {exchange1.brokerId}")

    await exchange1.close()

    # Test Case 2: Try to disable brokerId
    print("\n--- –¢–ï–°–¢ 2: –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫–ª—é—á–∏—Ç—å brokerId ---")
    exchange2 = ccxt.bybit({
        'enableRateLimit': True,
        'options': {
            'defaultType': 'future',
            'accountType': 'UNIFIED',
            'brokerId': None,  # Try to set None
        }
    })

    print(f"brokerId after set None: {exchange2.options.get('brokerId', 'NOT FOUND')}")
    await exchange2.close()

    # Test Case 3: Empty string
    print("\n--- –¢–ï–°–¢ 3: brokerId = '' (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞) ---")
    exchange3 = ccxt.bybit({
        'enableRateLimit': True,
        'options': {
            'defaultType': 'future',
            'accountType': 'UNIFIED',
            'brokerId': '',  # Empty string
        }
    })

    print(f"brokerId after set '': {exchange3.options.get('brokerId', 'NOT FOUND')}")
    await exchange3.close()

    # Test Case 4: Check source code behavior
    print("\n--- –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ CCXT ---")
    exchange4 = ccxt.bybit({
        'enableRateLimit': True,
        'options': {
            'defaultType': 'future',
            'accountType': 'UNIFIED',
        }
    })

    # Check if there's a method to see request params
    print("\n–ú–µ—Ç–æ–¥—ã exchange:")
    methods = [m for m in dir(exchange4) if 'broker' in m.lower()]
    for method in methods:
        print(f"  - {method}")

    # Check sign method (adds auth headers)
    if hasattr(exchange4, 'sign'):
        print("\n‚ö†Ô∏è  exchange.sign() method exists - adds auth to requests")

    # Check extend method (merges params)
    if hasattr(exchange4, 'extend'):
        print("‚ö†Ô∏è  exchange.extend() method exists - merges parameters")

        # Try extending empty params
        test_params = {'reduceOnly': True}
        print(f"\nOriginal params: {test_params}")

        # CCXT may add brokerId here
        # But we can't call extend directly without more context

    await exchange4.close()

    print("\n" + "=" * 70)
    print("üìã –í–´–í–û–î–´:")
    print("=" * 70)
    print("1. CCXT Bybit –∏–º–µ–µ—Ç –æ–ø—Ü–∏—é 'brokerId': 'CCXT' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
    print("2. Bybit API –ù–ï –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä 'brokerId' –≤ V5 API")
    print("3. CCXT –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç brokerId –≤ –∑–∞–ø—Ä–æ—Å—ã")
    print("4. –≠—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫—É 170003: 'unknown parameter'")
    print("\nüí° –†–ï–®–ï–ù–ò–ï:")
    print("   –ù—É–∂–Ω–æ –ª–∏–±–æ:")
    print("   a) –û—Ç–∫–ª—é—á–∏—Ç—å brokerId —á–µ—Ä–µ–∑ options")
    print("   b) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å params –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏")
    print("   c) –û–±–Ω–æ–≤–∏—Ç—å CCXT –¥–æ –≤–µ—Ä—Å–∏–∏, –≥–¥–µ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ")
    print("=" * 70)


async def test_ccxt_version():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ CCXT"""

    print("\n" + "=" * 70)
    print("–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û CCXT")
    print("=" * 70)

    print(f"CCXT version: {ccxt.__version__}")

    # Check if there are known issues
    print("\n–ò–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å brokerId:")
    print("- CCXT –¥–æ–±–∞–≤–ª—è–µ—Ç 'brokerId': 'CCXT' –¥–ª—è –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã")
    print("- Bybit V5 API –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –æ—Ä–¥–µ—Ä–æ–≤")
    print("- –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å 'brokerId': '' –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å")


if __name__ == "__main__":
    print("üîç –î–ï–¢–ê–õ–¨–ù–û–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï: brokerId Problem")

    asyncio.run(test_brokerId_investigation())
    asyncio.run(test_ccxt_version())

    print("\n" + "=" * 70)
    print("üéØ –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì: –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ API –∫–ª—é—á–∞–º–∏")
    print("=" * 70)
