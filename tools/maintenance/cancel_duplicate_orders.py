import asyncio
import ccxt.async_support as ccxt
import os
from dotenv import load_dotenv
from collections import defaultdict

load_dotenv()

async def cancel_duplicate_orders():
    exchange = ccxt.bybit({
        'apiKey': os.getenv('BYBIT_API_KEY'),
        'secret': os.getenv('BYBIT_API_SECRET'),
        'enableRateLimit': True,
        'options': {
            'defaultType': 'swap',
            'testnet': True
        }
    })

    try:
        print("=" * 80)
        print("–û–ß–ò–°–¢–ö–ê –î–£–ë–õ–ò–ö–ê–¢–û–í –°–¢–û–ü-–õ–û–°–° –û–†–î–ï–†–û–í")
        print("=" * 80)

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –æ—Ä–¥–µ—Ä–∞
        orders = await exchange.fetch_open_orders()
        print(f'\nüìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤: {len(orders)}')

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Å–∏–º–≤–æ–ª–∞–º
        orders_by_symbol = defaultdict(list)
        for order in orders:
            orders_by_symbol[order['symbol']].append(order)

        # –û—Ç–º–µ–Ω—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π)
        total_cancelled = 0
        for symbol, symbol_orders in orders_by_symbol.items():
            if len(symbol_orders) > 1:
                print(f'\n{symbol}: –Ω–∞–π–¥–µ–Ω–æ {len(symbol_orders)} –æ—Ä–¥–µ—Ä–æ–≤')

                # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ–∑–¥–∞–Ω–∏—è (—Å—Ç–∞—Ä—ã–µ –ø–µ—Ä–≤—ã–µ)
                symbol_orders.sort(key=lambda x: x['datetime'])

                # –û—Ç–º–µ–Ω—è–µ–º –≤—Å–µ –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
                for order in symbol_orders[:-1]:
                    try:
                        await exchange.cancel_order(order['id'], symbol)
                        print(f'  ‚úÖ –û—Ç–º–µ–Ω–µ–Ω —Å—Ç–∞—Ä—ã–π –æ—Ä–¥–µ—Ä –æ—Ç {order["datetime"]}')
                        total_cancelled += 1
                        await asyncio.sleep(0.5)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è rate limit
                    except Exception as e:
                        print(f'  ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –æ—Ä–¥–µ—Ä–∞: {e}')

                print(f'  üìå –û—Å—Ç–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ä–¥–µ—Ä –æ—Ç {symbol_orders[-1]["datetime"]}')

        print(f'\n‚ú® –í—Å–µ–≥–æ –æ—Ç–º–µ–Ω–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {total_cancelled}')

    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
    finally:
        await exchange.close()

asyncio.run(cancel_duplicate_orders())