#!/usr/bin/env python3
"""
–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Trailing Stop –¥–ª—è –≤—Å–µ—Ö –ø–æ–∑–∏—Ü–∏–π
–ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ë–î –Ω–∞–ø—Ä—è–º—É—é (source of truth), –Ω–µ —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–µ TS managers
"""
import asyncio
import sys
from pathlib import Path

# Add project root to path
sys.path.insert(0, str(Path(__file__).parent))

from config.settings import config as settings
from database.repository import Repository

async def verify_ts_initialization():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é TS –¥–ª—è –≤—Å–µ—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π —á–µ—Ä–µ–∑ –ë–î"""

    print("=" * 80)
    print("–í–ï–†–ò–§–ò–ö–ê–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò TRAILING STOP")
    print("=" * 80)
    print()

    # Initialize repository
    print("üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    db_config = {
        'host': settings.database.host,
        'port': settings.database.port,
        'database': settings.database.database,
        'user': settings.database.user,
        'password': settings.database.password,
        'pool_size': 5,
        'max_overflow': 10
    }
    repo = Repository(db_config)
    await repo.initialize()

    # Get open positions from DB
    print("üìã –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π –∏–∑ –ë–î...")
    print("   (–ë–î = –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π source of truth)")
    print()
    positions = await repo.get_open_positions()

    print(f"   –ù–∞–π–¥–µ–Ω–æ –ø–æ–∑–∏—Ü–∏–π —Å–æ status='active': {len(positions)}")

    if not positions:
        print()
        print("‚ö†Ô∏è  –ù–ï–¢ –û–¢–ö–†–´–¢–´–• –ü–û–ó–ò–¶–ò–ô")
        print("   –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é TS.")
        print("   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –æ—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞.")
        print()
        await repo.close()
        return False

    # Analyze positions by TS status
    print()
    print("=" * 80)
    print("–ê–ù–ê–õ–ò–ó TS –°–¢–ê–¢–£–°–û–í –í –ë–î")
    print("=" * 80)
    print()

    with_ts = []
    without_ts = []

    for pos in positions:
        has_ts = pos.get('has_trailing_stop', False)
        if has_ts:
            with_ts.append(pos)
        else:
            without_ts.append(pos)

    # Show positions WITH TS
    if with_ts:
        print(f"‚úÖ –ü–æ–∑–∏—Ü–∏–∏ –° Trailing Stop ({len(with_ts)}):")
        for pos in with_ts:
            symbol = pos['symbol']
            exchange = pos['exchange']
            side = pos['side']
            trailing_activated = pos.get('trailing_activated', False)
            status = "üü¢ –ê–ö–¢–ò–í–ò–†–û–í–ê–ù" if trailing_activated else "‚ö™ –û–ñ–ò–î–ê–ù–ò–ï"
            print(f"   {symbol:12} ({exchange:8}) | {side:5} | {status}")
        print()

    # Show positions WITHOUT TS
    if without_ts:
        print(f"‚ùå –ü–æ–∑–∏—Ü–∏–∏ –ë–ï–ó Trailing Stop ({len(without_ts)}):")
        for pos in without_ts:
            symbol = pos['symbol']
            exchange = pos['exchange']
            side = pos['side']
            pos_id = pos.get('id', 'N/A')
            print(f"   {symbol:12} ({exchange:8}) | {side:5} | ID={pos_id}")
        print()

    # Summary
    print("=" * 80)
    print("–ò–¢–û–ì–û–í–ê–Ø –û–¶–ï–ù–ö–ê")
    print("=" * 80)
    print()

    total = len(positions)
    with_ts_count = len(with_ts)
    without_ts_count = len(without_ts)
    coverage_percent = (with_ts_count / total * 100) if total > 0 else 0

    print(f"–í—Å–µ–≥–æ –ø–æ–∑–∏—Ü–∏–π:        {total}")
    print(f"–° TS:                 {with_ts_count}")
    print(f"–ë–µ–∑ TS:               {without_ts_count}")
    print(f"–ü–æ–∫—Ä—ã—Ç–∏–µ:             {coverage_percent:.1f}%")
    print()

    # Verdict
    if without_ts_count == 0:
        print("‚úÖ –û–¢–õ–ò–ß–ù–û: 100% –ø–æ–∑–∏—Ü–∏–π –∏–º–µ—é—Ç Trailing Stop!")
        print()
        print("   –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print("   –í—Å–µ –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –∑–∞—â–∏—â–µ–Ω—ã TS.")
        print()
        result = True
    elif coverage_percent >= 95:
        print(f"‚ö†Ô∏è  –ü–†–ò–ï–ú–õ–ï–ú–û: {coverage_percent:.1f}% –ø–æ–∑–∏—Ü–∏–π –∏–º–µ—é—Ç TS")
        print()
        print("   –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ü–µ–ª–æ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print(f"   {without_ts_count} –ø–æ–∑–∏—Ü–∏–π –±–µ–∑ TS - –≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–¥–∞–≤–Ω–æ –æ—Ç–∫—Ä—ã—Ç—ã.")
        print()
        print("   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:")
        print("   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏: grep 'Trailing stop initialized' logs/*.log")
        print("   - –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –ø–æ–∑–∏—Ü–∏–∏ –±–µ–∑ TS –æ—Ç–∫—Ä—ã—Ç—ã –Ω–µ–¥–∞–≤–Ω–æ (<1 –º–∏–Ω)")
        print()
        result = True
    else:
        print(f"‚ùå –ü–†–û–ë–õ–ï–ú–ê: –¢–æ–ª—å–∫–æ {coverage_percent:.1f}% –ø–æ–∑–∏—Ü–∏–π –∏–º–µ—é—Ç TS!")
        print()
        print("   –°–∏—Å—Ç–µ–º–∞ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print(f"   {without_ts_count} –∏–∑ {total} –ø–æ–∑–∏—Ü–∏–π –ù–ï –∏–º–µ—é—Ç –∑–∞—â–∏—Ç—ã TS.")
        print()
        print("   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. TS Manager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞")
        print("   2. –û—à–∏–±–∫–∞ –≤ create_trailing_stop() –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–∑–∏—Ü–∏–∏")
        print("   3. –ë–î –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è TS")
        print()
        print("   –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:")
        print("   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏: grep -i 'trailing' logs/*.log")
        print("   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å position_manager.py:522-547 (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TS)")
        print("   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ")
        print()
        result = False

    # Cleanup
    await repo.close()

    return result

if __name__ == "__main__":
    result = asyncio.run(verify_ts_initialization())
    sys.exit(0 if result else 1)
