#!/usr/bin/env python3
"""
–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ö–∞–Ω–∏–∑–º–∞ –æ—Ç–∫–∞—Ç–∞ –ø–æ–∑–∏—Ü–∏–π

–¶–µ–ª—å: –ü–æ–Ω—è—Ç—å –ø–æ—á–µ–º—É –æ—Ç–∫–∞—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ–≥–¥–∞ –ø–æ–∑–∏—Ü–∏—è —É–∂–µ –Ω–∞ –±–∏—Ä–∂–µ
"""

import asyncio
import re
from datetime import datetime, timedelta

def analyze_rollback_failures():
    """–ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –æ—Ç–∫–∞—Ç–∞"""
    print("=" * 80)
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ú–µ—Ö–∞–Ω–∏–∑–º –æ—Ç–∫–∞—Ç–∞ –ø–æ–∑–∏—Ü–∏–π")
    print("=" * 80)
    print()

    with open('logs/trading_bot.log', 'r') as f:
        lines = f.readlines()

    # –ù–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–∞—Ä—Ç
    start_idx = None
    for i, line in enumerate(lines):
        if 'üöÄ Starting trading bot' in line:
            start_idx = i

    if not start_idx:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Å—Ç–∞—Ä—Ç –±–æ—Ç–∞")
        return

    lines = lines[start_idx:]

    # –ò—â–µ–º —Å–ª—É—á–∞–∏ –æ—Ç–∫–∞—Ç–∞
    rollback_cases = []
    i = 0
    while i < len(lines):
        line = lines[i]

        if 'üîÑ Rolling back position' in line:
            # –ù–∞–π–¥–µ–Ω –æ—Ç–∫–∞—Ç
            match = re.search(r'Rolling back position for (\w+)', line)
            symbol = match.group(1) if match else 'UNKNOWN'

            # –ò—â–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç - —á—Ç–æ –±—ã–ª–æ –¥–æ –∏ –ø–æ—Å–ª–µ
            context_before = []
            context_after = []

            # 20 —Å—Ç—Ä–æ–∫ –¥–æ
            for j in range(max(0, i-20), i):
                if symbol in lines[j]:
                    context_before.append(lines[j].strip())

            # 20 —Å—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ
            for j in range(i+1, min(len(lines), i+20)):
                if symbol in lines[j]:
                    context_after.append(lines[j].strip())

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–∫–∞—Ç–∞
            rollback_success = False
            rollback_error = None

            for ctx in context_after:
                if 'successfully deleted from database' in ctx:
                    rollback_success = True
                if 'FAILED to close unprotected position' in ctx:
                    rollback_error = 'Failed to close on exchange'
                if 'Position creation rolled back' in ctx:
                    rollback_success = True  # DB rollback ok

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ã–ª –ª–∏ entry order —É—Å–ø–µ—à–µ–Ω
            entry_created = False
            for ctx in context_before:
                if 'position_created:' in ctx and symbol in ctx:
                    entry_created = True

            rollback_cases.append({
                'symbol': symbol,
                'entry_created': entry_created,
                'rollback_success': rollback_success,
                'rollback_error': rollback_error,
                'context_before': context_before[-5:],  # Last 5
                'context_after': context_after[:5]      # First 5
            })

        i += 1

    # –ê–Ω–∞–ª–∏–∑
    print(f"–ù–∞–π–¥–µ–Ω–æ —Å–ª—É—á–∞–µ–≤ –æ—Ç–∫–∞—Ç–∞: {len(rollback_cases)}")
    print()

    if not rollback_cases:
        print("‚úÖ –û—Ç–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ - —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—Ç–∫–∞—Ç–æ–≤")
        return

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ —Ç–∏–ø–∞–º
    entry_created_then_rollback = [r for r in rollback_cases if r['entry_created']]
    rollback_without_entry = [r for r in rollback_cases if not r['entry_created']]
    failed_to_close = [r for r in rollback_cases if r['rollback_error']]

    print(f"üìä –¢–∏–ø—ã –æ—Ç–∫–∞—Ç–æ–≤:")
    print(f"   - Entry —Å–æ–∑–¥–∞–Ω, –ø–æ—Ç–æ–º –æ—Ç–∫–∞—Ç: {len(entry_created_then_rollback)}")
    print(f"   - –û—Ç–∫–∞—Ç –±–µ–∑ entry: {len(rollback_without_entry)}")
    print(f"   - –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –Ω–∞ –±–∏—Ä–∂–µ: {len(failed_to_close)}")
    print()

    # –ö–†–ò–¢–ò–ß–ù–´–ï –°–õ–£–ß–ê–ò: Entry —Å–æ–∑–¥–∞–Ω –Ω–æ –æ—Ç–∫–∞—Ç –Ω–µ —Å–º–æ–≥ –∑–∞–∫—Ä—ã—Ç—å
    critical_cases = [r for r in rollback_cases
                      if r['entry_created'] and r['rollback_error']]

    if critical_cases:
        print("üî¥ –ö–†–ò–¢–ò–ß–ù–´–ï –°–õ–£–ß–ê–ò: –ü–æ–∑–∏—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞ –Ω–æ –æ—Ç–∫–∞—Ç failed!")
        print()
        for case in critical_cases:
            print(f"  Symbol: {case['symbol']}")
            print(f"  Entry created: ‚úÖ")
            print(f"  Rollback error: {case['rollback_error']}")
            print()
            print("  Context before rollback:")
            for ctx in case['context_before']:
                print(f"    {ctx}")
            print()
            print("  Context after rollback:")
            for ctx in case['context_after']:
                print(f"    {ctx}")
            print()
            print("-" * 80)
            print()

    # –ò—Ç–æ–≥–∏
    print("=" * 80)
    print("üìä –ò–¢–û–ì–û–í–´–ô –î–ò–ê–ì–ù–û–ó")
    print("=" * 80)
    print()

    if critical_cases:
        print("‚ùå –ü–†–û–ë–õ–ï–ú–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê:")
        print(f"  - {len(critical_cases)} —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ entry —Å–æ–∑–¥–∞–Ω –Ω–æ –æ—Ç–∫–∞—Ç failed")
        print(f"  - –†–µ–∑—É–ª—å—Ç–∞—Ç: –ü–æ–∑–∏—Ü–∏—è –ë–ï–ó SL –Ω–∞ –±–∏—Ä–∂–µ")
        print()
        print("üéØ ROOT CAUSE:")
        print("  1. Entry –æ—Ä–¥–µ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –Ω–∞ –±–∏—Ä–∂–µ")
        print("  2. –ü–æ–∑–∏—Ü–∏—è –∑–∞–ø–∏—Å–∞–Ω–∞ –≤ –ë–î")
        print("  3. SL –æ—Ä–¥–µ—Ä failed (amount=0.0)")
        print("  4. –û—Ç–∫–∞—Ç –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–∫—Ä—ã—Ç—å –ø–æ–∑–∏—Ü–∏—é –Ω–∞ –±–∏—Ä–∂–µ")
        print("  5. –ó–∞–∫—Ä—ã—Ç–∏–µ failed (amount=0.0 again)")
        print("  6. –ü–æ–∑–∏—Ü–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç–æ–π –ë–ï–ó SL")
        print()
        print("üîß –ù–£–ñ–ï–ù –§–ò–ö–°:")
        print("  - –£–ª—É—á—à–∏—Ç—å –æ—Ç–∫–∞—Ç: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ —Å –±–∏—Ä–∂–∏")
        print("  - –ò–ª–∏: –≤—ã—Å—Ç–∞–≤–∏—Ç—å SL –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å correct amount")
    else:
        print("‚úÖ –ö—Ä–∏—Ç–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        print("  - –õ–∏–±–æ –æ—Ç–∫–∞—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("  - –õ–∏–±–æ –æ—Ç–∫–∞—Ç–æ–≤ –Ω–µ –±—ã–ª–æ")

if __name__ == "__main__":
    analyze_rollback_failures()
